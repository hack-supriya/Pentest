import tornado.ioloop
import tornado.web
import socket

class PortScanHandler(tornado.web.RequestHandler):
    def get(self):
        hostname = self.get_argument('hostname')
        start_port = int(self.get_argument('start_port'))
        end_port = int(self.get_argument('end_port'))

        open_ports = []
        for port in range(start_port, end_port + 1):
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            result = sock.connect_ex((hostname, port))
            if result == 0:
                open_ports.append(port)
            sock.close()

        self.write('Open ports: ' + str(open_ports))


def make_app():
    return tornado.web.Application([
        (r"/portscan", PortScanHandler),
    ])


if __name__ == "__main__":
    app = make_app()
    app.listen(8888)
    tornado.ioloop.IOLoop.current().start()

'''
Tornado is a Python web framework and asynchronous networking toolkit for creating scalable, high-performance
online applications. It was created by Facebook and is currently an open-source project. Tornado is built to 
support hundreds of concurrent connections, making it a popular choice for developing real-time applications 
like chat services, gaming servers, and analytics systems.

In this example, we construct a Tornado web application that listens on port 8888 and exposes 
a /portscan endpoint with three parameters: hostname, start port and end port. When the endpoint is called, 
the application scans the supplied host and port range for open ports and provides a list of them.

To run this application, you can save the code to a file (e.g., app.py) and start the Tornado server 
by running the following command:

python app.py

Next, open a web browser and go to http://localhost:8888/portscan?hostname=example.com&start_port=1&end_port=1000 
to execute a port scan for ports 1 to 1000 on example.com. The output should be a JSON response with the following 
open ports:

Open ports: [80, 443]

(iwr -URI "http://localhost:8888/portscan?hostname=www.exploretours.in&start_port=20&end_port=25").Content
'''